name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Install dependencies
      run: |
           for s in TusLibros RomanNumbers Holiday; do
               dotnet restore $s
           done

    - name: Install tools
      run: dotnet tool install --global coverlet.console

    - name: Build TusLibros Debug and Release
      working-directory: TusLibros
      run: |
           dotnet build --configuration Release --no-restore
           dotnet build --configuration Debug --no-restore

    - name: Build other projects in Debug and Release
      run: |
           for s in RomanNumbers Holiday; do
               dotnet build --configuration Release --no-restore $s
               dotnet build --configuration Debug --no-restore $s
           done

    - name: Testing TusLibros
      working-directory: TusLibros
      run: |
           coverlet TusLibros.Core.UnitTests/bin/Debug/net9/TusLibros.Core.UnitTests.dll --target "dotnet" --targetargs "test TusLibros.Core.UnitTests/TusLibros.Core.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output core.coverage.xml
           coverlet TusLibros.API.UnitTests/bin/Debug/net9/TusLibros.API.UnitTests.dll --target "dotnet" --targetargs "test TusLibros.API.UnitTests/TusLibros.API.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output api.coverage.xml --exclude "[TusLibros.Core]*"

    - name: Testing other projects
      run: |
           for s in RomanNumbers Holiday; do
               coverlet $s/$s.UnitTests/bin/Debug/net9/$s.UnitTests.dll --target "dotnet" --targetargs "test $s/$s.UnitTests/$s.UnitTests.csproj --no-build --verbosity quiet" --format OpenCover --output $s.coverage.xml
           done

    - name: Upload coverage to CodeCov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: ./*.coverage.xml
